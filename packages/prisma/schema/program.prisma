model Program {
  id                String               @id @default(cuid())
  workspaceId       String
  defaultFolderId   String?
  name              String
  slug              String               @unique
  logo              String?
  wordmark          String?
  brandColor        String?
  domain            String?
  url               String?
  type              ProgramType          @default(affiliate)
  cookieLength      Int                  @default(90)
  holdingPeriodDays Int                  @default(0)
  minPayoutAmount   Int                  @default(10000)
  defaultRewardId   String?              @unique
  defaultDiscountId String?              @unique
  embedData         Json?
  landerData        Json?
  resources         Json?
  termsUrl          String?              @db.Text
  helpUrl           String?              @db.Text
  supportEmail      String?
  ageVerification   Int?
  createdAt         DateTime             @default(now())
  updatedAt         DateTime             @updatedAt
  workspace         Project              @relation(fields: [workspaceId], references: [id])
  primaryDomain     Domain?              @relation(fields: [domain], references: [slug], onUpdate: Cascade)
  partners          ProgramEnrollment[]
  payouts           Payout[]
  invoices          Invoice[]
  applications      ProgramApplication[]
  links             Link[]
  commissions       Commission[]
  rewards           Reward[]
  defaultReward     Reward?              @relation("ProgramDefaultReward", fields: [defaultRewardId], references: [id], onDelete: NoAction, onUpdate: NoAction)
  discounts         Discount[]           @relation("ProgramDiscounts")
  defaultDiscount   Discount?            @relation("ProgramDefaultDiscount", fields: [defaultDiscountId], references: [id], onDelete: NoAction, onUpdate: NoAction)

  @@index([workspaceId])
  @@index([domain])
}

model ProgramEnrollment {
  id            String                  @id @default(cuid())
  partnerId     String
  programId     String
  tenantId      String?
  discountId    String?
  applicationId String?                 @unique
  status        ProgramEnrollmentStatus @default(pending)
  createdAt     DateTime                @default(now())
  updatedAt     DateTime                @updatedAt
  bannedAt      DateTime?
  bannedReason  PartnerBannedReason?
  partner       Partner                 @relation(fields: [partnerId], references: [id], onDelete: Cascade, onUpdate: Cascade)
  program       Program                 @relation(fields: [programId], references: [id], onDelete: Cascade, onUpdate: Cascade)
  links         Link[]
  discount      Discount?               @relation(fields: [discountId], references: [id])
  application   ProgramApplication?     @relation(fields: [applicationId], references: [id])
  rewards       PartnerReward[]

  @@unique([partnerId, programId])
  @@unique([tenantId, programId])
  @@index([programId])
  @@index([discountId])
}

model ProgramApplication {
  id         String             @id @default(cuid())
  programId  String
  name       String
  email      String
  proposal   String?            @db.Text
  website    String?            @db.Text
  comments   String?            @db.Text
  createdAt  DateTime           @default(now())
  updatedAt  DateTime           @updatedAt
  program    Program            @relation(fields: [programId], references: [id])
  enrollment ProgramEnrollment?

  @@index([programId])
}

enum ProgramType {
  affiliate
  referral
}

enum CommissionType {
  percentage
  flat
}

enum ProgramEnrollmentStatus {
  pending
  approved
  rejected
  invited
  declined
  banned
}

enum PartnerBannedReason {
  tos_violation
  inappropriate_content
  fake_traffic
  fraud
  spam
  brand_abuse
}
