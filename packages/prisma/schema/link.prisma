model Link {
  id                String             @id @default(cuid())
  domain            String
  key               String
  url               String             @db.LongText
  shortLink         String             @unique @db.VarChar(400)
  archived          Boolean            @default(false)
  expiresAt         DateTime?
  expiredUrl        String?            @db.Text
  password          String?
  trackConversion   Boolean            @default(false)
  proxy             Boolean            @default(false)
  title             String?
  description       String?            @db.VarChar(280)
  image             String?            @db.LongText
  video             String?            @db.Text
  utm_source        String?
  utm_medium        String?
  utm_campaign      String?
  utm_term          String?
  utm_content       String?
  rewrite           Boolean            @default(false)
  doIndex           Boolean            @default(false)
  ios               String?            @db.Text
  android           String?            @db.Text
  geo               Json?
  testVariants      Json?
  testStartedAt     DateTime?
  testCompletedAt   DateTime?
  userId            String?
  projectId         String?
  programId         String?
  folderId          String?
  externalId        String?
  tenantId          String?
  publicStats       Boolean            @default(false)
  clicks            Int                @default(0)
  lastClicked       DateTime?
  leads             Int                @default(0)
  sales             Int                @default(0)
  saleAmount        Int                @default(0)
  createdAt         DateTime           @default(now())
  updatedAt         DateTime           @updatedAt
  comments          String?            @db.Text
  partnerId         String?
  originalUrl       String?            @db.LongText
  shopmyMetadata    Json?
  commissionSplits  Json?              // Store commission split configurations
  user              User?              @relation(fields: [userId], references: [id])
  project           Project?           @relation(fields: [projectId], references: [id], onDelete: Cascade, onUpdate: Cascade)
  projectDomain     Domain?            @relation(fields: [domain], references: [slug], onDelete: Cascade, onUpdate: Cascade)
  folder            Folder?            @relation(fields: [folderId], references: [id], onDelete: SetNull, onUpdate: Cascade)
  tags              LinkTag[]
  webhooks          LinkWebhook[]
  dashboard         Dashboard?
  programEnrollment ProgramEnrollment? @relation(fields: [programId, partnerId], references: [programId, partnerId])
  program           Program?           @relation(fields: [programId], references: [id])
  customers         Customer[]
  commissions       Commission[]

  @@unique([domain, key])
  @@unique([projectId, externalId])
  @@index([projectId, url(length: 500)])
  @@index([projectId, folderId, archived, createdAt(sort: Desc)])
  @@index([programId, partnerId])
  @@index([folderId])
  @@index([userId])
}
